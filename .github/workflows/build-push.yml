name: Build docker image and push to DockerHub.
# - How to Run Python Scripts in GitHub Action Workflows, Data Engineering With Nick, 1.43K subscribers
#   https://www.youtube.com/watch?v=zk4bSTD8uWM

on:
  push:
    branches:
      - main
  workflow_dispatch:
    # inputs:
      # selected-environment:
          # type: environment
          # description: Select the environment.

jobs:
  prepare-train-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository.
        uses: actions/checkout@v4

      - name: Setup Python 3.12.
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      - name: Install Python dependencies.
        run: |
          # python -m pip install --upgrade . botocore boto3 awscli
          echo "Install Python dependencies."
          python -m pip install -r requirements.txt

      - name: Run Python scripts.
        run: |
          # if [ "${{ inputs.action }}" = "prepare" ]; then
          # elif [ "${{ inputs.action }}" = "train-build" ]; then
          # fi
          echo "Running python scripts..."
          python src/prepare.py
          # This will create a *_model.pkl file in the model folder.
          python src/train_build.py

      # https://github.com/actions/upload-artifact/tree/v4
      - uses: actions/upload-artifact@v4
        with:
          name: Trained model artifact.
          # You can use wildcard pattern to specify what files/folders to upload.
          # path: ./model/*.pkl
          path: ./model/*

  build-and-push-image-to-docker-hub:
    needs: [prepare-train-build]
    environment: "prod"
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository.
        uses: actions/checkout@v4

      - name: Login to Docker Hub.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to Docker Hub.
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Push the developer version of the image to the DockerHub.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ml-model:latest
